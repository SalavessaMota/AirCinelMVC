@model AirCinelMVC.Models.ChangeUserViewModel
@{
    ViewData["Title"] = "ChangeUser";
}

<h2>Edit User Information</h2>

<div class="row">
    <div class="col-md-4 offsett-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly"></div>

            <div class="form-group">
                <label asp-for="FirstName">First Name</label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-warning"></span>
            </div>

            <div class="form-group">
                <label asp-for="LastName">Last Name</label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-warning"></span>
            </div>

            <div class="form-group">
                <label asp-for="CountryId" class="control-label"></label>
                <select asp-for="CountryId" asp-items="Model.Countries" class="form-control"></select>
                <span asp-validation-for="CountryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CityId" class="control-label"></label>
                <select asp-for="CityId" asp-items="Model.Cities" class="form-control"></select>
                <span asp-validation-for="CityId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Address">Address</label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-warning"></span>
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber">Phone Number</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-warning"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a asp-action="ChangePassword" class="btn btn-success">Change Password</a>
            </div>

            <div class="text-success">
                @ViewBag.UserMessage
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        $(document).ready(function () {
            // Primeiro, seleciona o país e a cidade previamente associados ao utilizador
            var selectedCountry = '@Model.CountryId';
            var selectedCity = '@Model.CityId';

            // Função para carregar cidades baseado no país selecionado
            function loadCities(countryId, selectedCity) {
                $("#CityId").empty();
                $.ajax({
                    url: '@Url.Action("GetCitiesAsync", "Account")',
                    type: 'POST',
                    dataType: 'json',
                    data: { countryId: countryId },
                    success: function (cities) {
                        $("#CityId").append('<option value="0">(Select a city...)</option>');
                        $.each(cities, function (i, city) {
                            $("#CityId").append('<option value="'
                                + city.id + '">'
                                + city.name + '</option>');
                        });

                        // Pré-seleciona a cidade se existir uma
                        if (selectedCity) {
                            $("#CityId").val(selectedCity);
                        }
                    },
                    error: function (ex) {
                        alert('Failed to retrieve cities.' + ex);
                    }
                });
            }

            // Mensagem de erro caso o país não seja válido
            function showCountryError() {
                if ($("#country-error").length === 0) {
                    $("#CountryId").after('<span id="country-error" class="text-danger">Please select a valid country.</span>');
                }
            }

            function hideCountryError() {
                $("#country-error").remove();
            }

            // Carrega as cidades automaticamente ao carregar a página com o país pré-selecionado
            if (selectedCountry && selectedCountry !== "0") {
                // Garante que o país também seja corretamente selecionado
                $("#CountryId").val(selectedCountry);
                loadCities(selectedCountry, selectedCity);
            }

            // Ao mudar o país, carrega as cidades correspondentes
            $("#CountryId").change(function () {
                var countryId = $(this).val();
                if (countryId && countryId !== "0") {
                    loadCities(countryId, null);
                    hideCountryError();
                } else {
                    // Se o valor for 0, exibe a mensagem de erro
                    showCountryError();
                    $("#CityId").empty(); // Limpa a lista de cidades
                }
            });

            // Verifica se o país é válido ao selecionar uma cidade
            $("#CityId").change(function () {
                var countryId = $("#CountryId").val();
                if (!countryId || countryId === "0") {
                    showCountryError();
                }
            });
        });
    </script>



}

